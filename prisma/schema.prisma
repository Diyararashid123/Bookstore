  // This is your Prisma schema file,
  // learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}
  generator client {
    provider = "prisma-client-js"
  }

  model Post {
    id        Int     @id @default(autoincrement())
    title     String
    content   String?
    published Boolean @default(false)
    author    User?   @relation(fields: [authorId], references: [id])
    authorId  Int?
  }

  model User {
    id      Int       @id @default(autoincrement())
    clerkId String       @unique
    posts   Post[]
    orders  Order[]   
    balance   Float     @default(500)
    purchases Purchase[]
    reviews     Review[]
    wishlists Wishlist[]     
    interactions Interaction[] 
  }

    model Category {
      id     Int      @id @default(autoincrement())
      name   String    @unique
      book   Book[]
      featured Boolean @default(false) 
    }

model Book {
  id           Int          @id @default(autoincrement())
  title        String       @unique
  description  String?
  price        Float
  releaseDate  DateTime    
  purchases    Purchase[]
  reviews      Review[]
  wishlists    Wishlist[]
  category     Category[]
  totalSold    Int          @default(0) 
  stock        Int          @default(0)
  featured     Boolean      @default(false)
  views        Int          @default(0) 
  wishlistCount Int         @default(0) 
  interactions Interaction[] 
}

  
  model Purchase {
    id        Int       @id @default(autoincrement())
    quantity  Int       
    createdAt DateTime  @default(now()) 
    user      User[]
    book      Book[]
  }


  model Order {
    id       Int         @id @default(autoincrement())
    user     User        @relation(fields: [userId], references: [id]) 
    userId   Int
    items    OrderItem[]
    total    Float
  }

  model OrderItem {
    id      Int   @id @default(autoincrement())
    order   Order @relation(fields: [orderId], references: [id])
    orderId Int
    bookId  Int
    quantity Int
  }

  model Review {
    id        Int       @id @default(autoincrement())
    userId    Int
    bookId    Int
    user      User      @relation(fields: [userId], references: [id])
    book      Book      @relation(fields: [bookId], references: [id])
    rating    Float
    comment   String?
    createdAt DateTime  @default(now())
  }

  model Wishlist {
    id      Int       @id @default(autoincrement())
    userId  Int
    user    User      @relation(fields: [userId], references: [id])
    bookId  Int
    book    Book      @relation(fields: [bookId], references: [id])
  }


model Interaction {
  id       Int      @id @default(autoincrement())
  clerkId  String
  bookId   Int
  user     User     @relation(fields: [clerkId], references: [clerkId])
  book     Book     @relation(fields: [bookId], references: [id])
}

